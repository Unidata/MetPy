[metadata]
name = MetPy
description = Collection of tools for reading, visualizing and performing calculations with weather data.
long_description = file: README.md
long_description_content_type = text/markdown
author = Ryan May, Patrick Marsh, Sean Arms, Eric Bruning, John Leeman, Zach Bruick
author_email = support-python@unidata.ucar.edu
maintainer = MetPy Developers
maintainer_email = support-python@unidata.ucar.edu
license = BSD 3-Clause
license_file = LICENSE
platform = any
keywords = meteorology, weather
classifiers =
    Development Status :: 5 - Production/Stable
    Framework :: Matplotlib
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Atmospheric Science
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    License :: OSI Approved :: BSD License
url = https://github.com/Unidata/MetPy
project_urls =
    Documentation = https://unidata.github.io/MetPy/
    Release Notes = https://github.com/Unidata/MetPy/releases
    Bug Tracker = https://github.com/Unidata/MetPy/issues
    Source Code = https://github.com/Unidata/MetPy
    Twitter = https://twitter.com/MetPy
    MetPy Mondays = https://www.youtube.com/playlist?list=PLQut5OXpV-0ir4IdllSt1iEZKTwFBa7kO

[options]
zip_safe = True
package_dir =
    = src
packages = find:
include_package_data = True
setup_requires = setuptools_scm
python_requires = >=3.8
install_requires =
    importlib_resources>=1.3.0; python_version < '3.9'
    matplotlib>=3.3.0
    numpy>=1.18.0
    pandas>=1.0.0
    pint>=0.10.1
    pooch>=1.2.0
    pyproj>=2.5.0
    scipy>=1.4.0
    traitlets>=5.0.5
    xarray>=0.14.1

[options.packages.find]
where = src

[options.extras_require]
doc =
    sphinx
    sphinx-gallery>=0.4
    myst-parser
    netCDF4
examples =
    cartopy>=0.17.0
    geopandas>=0.6.0
    matplotlib>=3.3.0
    shapely>=1.6.0
test =
    pytest>=2.4
    pytest-mpl
    cartopy>=0.17.0
    netCDF4
    shapely>=1.6.0

[build_sphinx]
source-dir = docs/source
build-dir = docs/build
all-files = True

[pycodestyle]
ignore = W503
max-line-length = 95

[flake8]
max-line-length = 95
copyright-check = True
copyright-author = MetPy Developers
inline-quotes = single
multiline-quotes = double
rst-roles = class, data, doc, func, meth, mod
rst-directives = plot, versionchanged
docstring-convention = numpy
known-modules = matplotlib:[matplotlib,mpl_toolkits],netcdf4:[netCDF4]
exclude = docs build src/metpy/io/_metar_parser/metar_parser.py
select = A B C D E F G H I J K L M N O P Q R S T U V W X Y Z B902
ignore = F405 W503 RST902 SIM106
per-file-ignores = examples/*.py: D MPY001 T003 T201
                   tutorials/*.py: D MPY001 T003 T201
                   src/metpy/deprecation.py: C801
                   src/metpy/calc/*.py: RST306
                   src/metpy/interpolate/*.py: RST306
                   src/metpy/io/*.py: RST306
                   src/metpy/future.py: RST307
                   src/metpy/constants/*.py: RST306
                   src/metpy/_version.py: I900
                   docs/doc-server.py: T201
                   tests/*.py: MPY001
                   ci/filter_links.py: E731 T201
                   tools/flake8-metpy/test_flake8_metpy.py: I900

[flake8:local-plugins]
extension = MPY = flake8_metpy:MetPyChecker
paths = ./tools/flake8-metpy

[tool:pytest]
markers = xfail_dask: marks tests as expected to fail with Dask arrays
norecursedirs = build docs .idea
doctest_optionflags = NORMALIZE_WHITESPACE
mpl-results-path = test_output

[doc8]
ignore-path = docs/build,docs/api/generated,docs/_templates,docs/tutorials,docs/examples
file-encoding = utf8
max-line-length = 95

[pydocstyle]
match = (?!(test_|setup)).*\.py
match-dir = (?!(build|docs|examples|tutorials|_nexrad_msgs))[^.].*
convention = numpy

[codespell]
skip = *.tbl,*.ipynb,AUTHORS.txt,gempak.rst,.git,./staticdata,./docs/build
exclude-file = .codespellignore
