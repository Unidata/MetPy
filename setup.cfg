[metadata]
name = MetPy
description = Collection of tools for reading, visualizing and performing calculations with weather data.
long_description = file: README.md
long_description_content_type = text/markdown
author = Ryan May, Patrick Marsh, Sean Arms, Eric Bruning, John Leeman, Zach Bruick
author_email = support-python@unidata.ucar.edu
maintainer = MetPy Developers
maintainer_email = support-python@unidata.ucar.edu
license = BSD 3-Clause
license-file = LICENSE
platform = any
keywords = meteorology, weather
classifiers =
    Development Status :: 5 - Production/Stable
    Framework :: Matplotlib
    Programming Language :: Python
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Atmospheric Science
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    License :: OSI Approved :: BSD License
url = https://github.com/Unidata/MetPy
project_urls =
    Documentation = https://unidata.github.io/MetPy/
    Release Notes = https://github.com/Unidata/MetPy/releases
    Bug Tracker = https://github.com/Unidata/MetPy/issues
    Source Code = https://github.com/Unidata/MetPy

[options]
zip_safe = True
package_dir =
    = src
packages = find:
include_package_data = True
setup_requires = setuptools_scm
python_requires = >=3.6
install_requires =
    matplotlib>=2.1.0
    numpy>=1.16.0
    scipy>=1.0
    pint>=0.10.1
    xarray>=0.14.1
    pooch>=0.1
    traitlets>=4.3.0
    pandas>=0.22.0
    importlib_metadata>=1.0.0; python_version < '3.8'
    importlib_resources>=1.3.0; python_version < '3.9'

[options.packages.find]
where = src

[options.extras_require]
doc = sphinx; sphinx-gallery>=0.4; myst-parser; netCDF4
examples = cartopy>=0.15.0; matplotlib>=2.2.0; pyproj>=1.9.4,!=2.0.0
test = pytest>=2.4; pytest-mpl; cartopy>=0.16.0; netCDF4; pyproj>=1.9.4,!=2.0.0

[build_sphinx]
source-dir = docs/source
build-dir = docs/build
all-files = True

[pycodestyle]
ignore = W503
max-line-length = 95

[flake8]
max-line-length = 95
application-import-names = metpy
import-order-style = google
copyright-check = True
copyright-author = MetPy Developers
inline-quotes = single
multiline-quotes = double
rst-roles = class, data, func, meth, mod
rst-directives = plot
docstring-convention = numpy
exclude = docs build src/metpy/io/metar_parser.py
select = A B C D E F H I M Q RST S T W B902
ignore = F405 W503 RST902
per-file-ignores = examples/*.py: D T003 T001
                   tutorials/*.py: D T003 T001
                   src/metpy/xarray.py: RST304
                   src/metpy/deprecation.py: C801
                   src/metpy/calc/*.py: RST306
                   src/metpy/interpolate/*.py: RST306
                   src/metpy/future.py: RST306

[tool:pytest]
# https://github.com/matplotlib/pytest-mpl/issues/69
markers = mpl_image_compare
norecursedirs = build docs .idea
doctest_optionflags = NORMALIZE_WHITESPACE
mpl-results-path = test_output

[doc8]
ignore-path = docs/build,docs/api/generated,docs/_templates,docs/tutorials,docs/examples
file-encoding = utf8
max-line-length = 95

[pydocstyle]
match = (?!(test_|setup)).*\.py
match-dir = (?!(build|docs|examples|tutorials|_nexrad_msgs))[^.].*
convention = numpy

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 95
known_first_party = ["metpy"]
force_sort_within_sections = true
src_paths=src,ci,docs,examples,tests,tools,tutorials
