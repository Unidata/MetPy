
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/calculations/Mean_Pressure_Weighted.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_calculations_Mean_Pressure_Weighted.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_calculations_Mean_Pressure_Weighted.py:


======================
Mean Pressure Weighted
======================

Use `metpy.calc.mean_pressure_weighted` as well as pint's unit support to perform calculations.

The code below uses example data from our test suite to calculate the pressure-weighted mean
temperature over a depth of 500 hPa.

.. GENERATED FROM PYTHON SOURCE LINES 14-20

.. code-block:: Python

    import pandas as pd

    from metpy.calc import mean_pressure_weighted
    from metpy.cbook import get_test_data
    from metpy.units import units








.. GENERATED FROM PYTHON SOURCE LINES 21-23

Upper air data can be obtained using the siphon package, but for this example we will use
some of MetPy's sample data.

.. GENERATED FROM PYTHON SOURCE LINES 23-31

.. code-block:: Python


    # Set column names
    col_names = ['pressure', 'height', 'temperature', 'dewpoint', 'direction', 'speed']

    # Read in test data using col_names
    df = pd.read_fwf(get_test_data('jan20_sounding.txt', as_file_obj=False),
                     skiprows=5, usecols=[0, 1, 2, 3, 6, 7], names=col_names)








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Drop any rows with all NaN values for T, Td, winds

.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: Python

    df = df.dropna(subset=('temperature', 'dewpoint', 'direction', 'speed'),
                   how='all').reset_index(drop=True)








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Isolate pressure, temperature, and height and add units

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: Python

    p = df['pressure'].values * units.hPa
    T = df['temperature'].values * units.degC
    h = df['height'].values * units.meters








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Calculate the mean pressure weighted temperature over a depth of 500 hPa

.. GENERATED FROM PYTHON SOURCE LINES 44-45

.. code-block:: Python

    print(mean_pressure_weighted(p, T, height=h, depth=500 * units.hPa))




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [<Quantity(272.583109, 'kelvin')>]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.011 seconds)


.. _sphx_glr_download_examples_calculations_Mean_Pressure_Weighted.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Mean_Pressure_Weighted.ipynb <Mean_Pressure_Weighted.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Mean_Pressure_Weighted.py <Mean_Pressure_Weighted.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: Mean_Pressure_Weighted.zip <Mean_Pressure_Weighted.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
