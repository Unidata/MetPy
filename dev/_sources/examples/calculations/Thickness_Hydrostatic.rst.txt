
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/calculations/Thickness_Hydrostatic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_calculations_Thickness_Hydrostatic.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_calculations_Thickness_Hydrostatic.py:


=====================
Hydrostatic Thickness
=====================

Use functions from `metpy.calc` as well as pint's unit support to perform calculations.

The code below uses example data from our test suite to calculate the hydrostatic thickness
between the surface and 500-hPa level for the provided sounding data.

.. GENERATED FROM PYTHON SOURCE LINES 14-21

.. code-block:: Python

    import pandas as pd

    from metpy.calc import (mixing_ratio_from_relative_humidity, relative_humidity_from_dewpoint,
                            thickness_hydrostatic)
    from metpy.cbook import get_test_data
    from metpy.units import units








.. GENERATED FROM PYTHON SOURCE LINES 22-24

Upper air data can be obtained using the siphon package, but for this example we will use
some of MetPy's sample data.

.. GENERATED FROM PYTHON SOURCE LINES 24-32

.. code-block:: Python


    # Set column names
    col_names = ['pressure', 'height', 'temperature', 'dewpoint', 'direction', 'speed']

    # Read in test data using col_names
    df = pd.read_fwf(get_test_data('jan20_sounding.txt', as_file_obj=False),
                     skiprows=5, usecols=[0, 1, 2, 3, 6, 7], names=col_names)








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Drop any rows with all NaN values for T, Td, winds

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: Python

    df = df.dropna(subset=('temperature', 'dewpoint', 'direction', 'speed'
                           ), how='all').reset_index(drop=True)








.. GENERATED FROM PYTHON SOURCE LINES 38-39

Isolate pressure, temperature, and dewpoint and add units

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    p = df['pressure'].values * units.hPa
    T = df['temperature'].values * units.degC
    Td = df['dewpoint'].values * units.degC








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Calculate the relative humidity to compute the mixing ratio

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: Python

    rh = relative_humidity_from_dewpoint(T, Td)
    mixrat = mixing_ratio_from_relative_humidity(p, T, rh)








.. GENERATED FROM PYTHON SOURCE LINES 49-51

Calculate the thickness from the pressure, temperature, and mixing ratio
for the layer from the surface pressure to 500-hPa

.. GENERATED FROM PYTHON SOURCE LINES 51-52

.. code-block:: Python

    print(thickness_hydrostatic(p, T, mixing_ratio=mixrat, depth=p[0] - 500 * units.hPa))




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    5332.4331211279705 meter





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.012 seconds)


.. _sphx_glr_download_examples_calculations_Thickness_Hydrostatic.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Thickness_Hydrostatic.ipynb <Thickness_Hydrostatic.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Thickness_Hydrostatic.py <Thickness_Hydrostatic.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: Thickness_Hydrostatic.zip <Thickness_Hydrostatic.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
