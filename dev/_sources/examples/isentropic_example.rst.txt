
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/isentropic_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_isentropic_example.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_isentropic_example.py:


===================
Isentropic Analysis
===================

The MetPy function `mpcalc.isentropic_interpolation` allows for isentropic analysis from model
analysis data in isobaric coordinates.

.. GENERATED FROM PYTHON SOURCE LINES 14-25

.. code-block:: Python

    import cartopy.crs as ccrs
    import cartopy.feature as cfeature
    import matplotlib.pyplot as plt
    import numpy as np
    import xarray as xr

    import metpy.calc as mpcalc
    from metpy.cbook import get_test_data
    from metpy.plots import add_metpy_logo, add_timestamp
    from metpy.units import units








.. GENERATED FROM PYTHON SOURCE LINES 26-32

**Getting the data**

In this example, [NARR reanalysis data](
https://www.ncei.noaa.gov/products/weather-climate-models/north-american-regional)
for 18 UTC 04 April 1987 from the National Centers for Environmental Information will be
used.

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: Python


    data = xr.open_dataset(get_test_data('narr_example.nc', False))








.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: Python

    print(list(data.variables))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['Temperature', 'time', 'isobaric', 'y', 'x', 'Lambert_Conformal', 'lat', 'lon', 'u_wind', 'v_wind', 'Geopotential_height', 'Specific_humidity']




.. GENERATED FROM PYTHON SOURCE LINES 39-41

We will reduce the dimensionality of the data as it is pulled in to remove an empty time
dimension, as well as add longitude and latitude as coordinates (instead of data variables).

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: Python


    data = data.squeeze().set_coords(['lon', 'lat'])








.. GENERATED FROM PYTHON SOURCE LINES 45-47

To properly interpolate to isentropic coordinates, the function must know the desired output
isentropic levels. An array with these levels will be created below.

.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: Python


    isentlevs = [296.] * units.kelvin








.. GENERATED FROM PYTHON SOURCE LINES 51-59

**Conversion to Isentropic Coordinates**

Once three dimensional data in isobaric coordinates has been pulled and the desired
isentropic levels created, the conversion to isentropic coordinates can begin. Data will be
passed to the function as below. The function requires that isentropic levels, as well as a
DataArray of temperature on isobaric coordinates be input. Any additional inputs (in this
case specific humidity, geopotential height, and u and v wind components) will be
logarithmicaly interpolated to isentropic space.

.. GENERATED FROM PYTHON SOURCE LINES 59-69

.. code-block:: Python


    isent_data = mpcalc.isentropic_interpolation_as_dataset(
        isentlevs,
        data['Temperature'],
        data['u_wind'],
        data['v_wind'],
        data['Specific_humidity'],
        data['Geopotential_height']
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/MetPy/MetPy/examples/isentropic_example.py:60: UserWarning: Interpolation point out of data bounds encountered
      isent_data = mpcalc.isentropic_interpolation_as_dataset(




.. GENERATED FROM PYTHON SOURCE LINES 70-71

The output is an xarray Dataset:

.. GENERATED FROM PYTHON SOURCE LINES 71-74

.. code-block:: Python


    isent_data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 2MB
    Dimensions:              (isentropic_level: 1, y: 118, x: 292)
    Coordinates:
      * isentropic_level     (isentropic_level) float64 8B 296.0
        time                 datetime64[ns] 8B 1987-04-04T18:00:00
      * y                    (y) float64 944B -3.087e+03 -3.054e+03 ... 678.9 711.4
      * x                    (x) float64 2kB -3.977e+03 -3.945e+03 ... 5.47e+03
        lat                  (y, x) float64 276kB ...
        lon                  (y, x) float64 276kB ...
    Data variables:
        pressure             (isentropic_level, y, x) float64 276kB &lt;Quantity([[[...
        temperature          (isentropic_level, y, x) float64 276kB &lt;Quantity([[[...
        u_wind               (isentropic_level, y, x) float64 276kB &lt;Quantity([[[...
        v_wind               (isentropic_level, y, x) float64 276kB &lt;Quantity([[[...
        Specific_humidity    (isentropic_level, y, x) float64 276kB &lt;Quantity([[[...
        Geopotential_height  (isentropic_level, y, x) float64 276kB &lt;Quantity([[[...</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-6adb380d-ad8a-4d25-bc1b-f7a57d5a10b7' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-6adb380d-ad8a-4d25-bc1b-f7a57d5a10b7' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>isentropic_level</span>: 1</li><li><span class='xr-has-index'>y</span>: 118</li><li><span class='xr-has-index'>x</span>: 292</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-bb1963ea-0232-4456-98d2-2dffac32a1e8' class='xr-section-summary-in' type='checkbox'  checked><label for='section-bb1963ea-0232-4456-98d2-2dffac32a1e8' class='xr-section-summary' >Coordinates: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>isentropic_level</span></div><div class='xr-var-dims'>(isentropic_level)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>296.0</div><input id='attrs-699b978c-39b6-4a8e-a431-66d1d029344f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-699b978c-39b6-4a8e-a431-66d1d029344f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4cb67585-8d13-40a5-b10e-1ad0300c6cda' class='xr-var-data-in' type='checkbox'><label for='data-4cb67585-8d13-40a5-b10e-1ad0300c6cda' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>kelvin</dd><dt><span>positive :</span></dt><dd>up</dd></dl></div><div class='xr-var-data'><pre>array([296.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1987-04-04T18:00:00</div><input id='attrs-43166638-0185-423e-bc1d-85173568b214' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-43166638-0185-423e-bc1d-85173568b214' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b3ccf588-4913-41e2-a22d-13baf8388563' class='xr-var-data-in' type='checkbox'><label for='data-b3ccf588-4913-41e2-a22d-13baf8388563' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>forecast time</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Time</dd><dt><span>_metpy_axis :</span></dt><dd>time</dd></dl></div><div class='xr-var-data'><pre>array(&#x27;1987-04-04T18:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.087e+03 -3.054e+03 ... 711.4</div><input id='attrs-392fff53-c9bb-4e24-a2f7-9ee4c05a2ced' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-392fff53-c9bb-4e24-a2f7-9ee4c05a2ced' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6cc15d44-e399-4a51-ab90-8a195cdad9cd' class='xr-var-data-in' type='checkbox'><label for='data-6cc15d44-e399-4a51-ab90-8a195cdad9cd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>km</dd><dt><span>long_name :</span></dt><dd>y coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_y_coordinate</dd><dt><span>grid_spacing :</span></dt><dd>32.463 km</dd><dt><span>_CoordinateAxisType :</span></dt><dd>GeoY</dd><dt><span>_metpy_axis :</span></dt><dd>y</dd></dl></div><div class='xr-var-data'><pre>array([-3.086806e+03, -3.054343e+03, -3.021880e+03, -2.989417e+03,
           -2.956954e+03, -2.924491e+03, -2.892028e+03, -2.859565e+03,
           -2.827102e+03, -2.794639e+03, -2.762176e+03, -2.729713e+03,
           -2.697250e+03, -2.664787e+03, -2.632324e+03, -2.599861e+03,
           -2.567398e+03, -2.534935e+03, -2.502472e+03, -2.470009e+03,
           -2.437546e+03, -2.405083e+03, -2.372620e+03, -2.340157e+03,
           -2.307694e+03, -2.275231e+03, -2.242768e+03, -2.210305e+03,
           -2.177842e+03, -2.145379e+03, -2.112916e+03, -2.080453e+03,
           -2.047990e+03, -2.015527e+03, -1.983064e+03, -1.950601e+03,
           -1.918138e+03, -1.885675e+03, -1.853212e+03, -1.820749e+03,
           -1.788286e+03, -1.755823e+03, -1.723360e+03, -1.690897e+03,
           -1.658434e+03, -1.625971e+03, -1.593508e+03, -1.561045e+03,
           -1.528582e+03, -1.496119e+03, -1.463656e+03, -1.431193e+03,
           -1.398730e+03, -1.366267e+03, -1.333804e+03, -1.301341e+03,
           -1.268878e+03, -1.236415e+03, -1.203952e+03, -1.171489e+03,
           -1.139026e+03, -1.106563e+03, -1.074100e+03, -1.041637e+03,
           -1.009174e+03, -9.767106e+02, -9.442476e+02, -9.117846e+02,
           -8.793216e+02, -8.468586e+02, -8.143956e+02, -7.819326e+02,
           -7.494696e+02, -7.170066e+02, -6.845436e+02, -6.520806e+02,
           -6.196176e+02, -5.871546e+02, -5.546916e+02, -5.222286e+02,
           -4.897656e+02, -4.573026e+02, -4.248396e+02, -3.923766e+02,
           -3.599136e+02, -3.274506e+02, -2.949876e+02, -2.625246e+02,
           -2.300616e+02, -1.975986e+02, -1.651356e+02, -1.326726e+02,
           -1.002096e+02, -6.774665e+01, -3.528365e+01, -2.820646e+00,
            2.964235e+01,  6.210535e+01,  9.456835e+01,  1.270314e+02,
            1.594944e+02,  1.919574e+02,  2.244204e+02,  2.568834e+02,
            2.893464e+02,  3.218094e+02,  3.542724e+02,  3.867354e+02,
            4.191984e+02,  4.516614e+02,  4.841244e+02,  5.165874e+02,
            5.490504e+02,  5.815134e+02,  6.139764e+02,  6.464394e+02,
            6.789024e+02,  7.113654e+02])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.977e+03 -3.945e+03 ... 5.47e+03</div><input id='attrs-fe83af17-2a95-4bf0-abbf-8d1ca1d99202' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-fe83af17-2a95-4bf0-abbf-8d1ca1d99202' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-04ce6922-d0cb-4feb-a587-c5462c350bfc' class='xr-var-data-in' type='checkbox'><label for='data-04ce6922-d0cb-4feb-a587-c5462c350bfc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>km</dd><dt><span>long_name :</span></dt><dd>x coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_x_coordinate</dd><dt><span>grid_spacing :</span></dt><dd>32.463 km</dd><dt><span>_CoordinateAxisType :</span></dt><dd>GeoX</dd><dt><span>_metpy_axis :</span></dt><dd>x</dd></dl></div><div class='xr-var-data'><pre>array([-3977.054864, -3944.591864, -3912.128864, ...,  5404.752136,
            5437.215136,  5469.678136], shape=(292,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>lat</span></div><div class='xr-var-dims'>(y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-1e065f5e-fe83-4862-bf9f-1b36bf797b67' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1e065f5e-fe83-4862-bf9f-1b36bf797b67' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f5a30bee-27a5-4a0f-9133-a9dab90fe21f' class='xr-var-data-in' type='checkbox'><label for='data-f5a30bee-27a5-4a0f-9133-a9dab90fe21f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>long_name :</span></dt><dd>latitude coordinate</dd><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lat</dd><dt><span>_metpy_axis :</span></dt><dd>latitude</dd></dl></div><div class='xr-var-data'><pre>[34456 values with dtype=float64]</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>lon</span></div><div class='xr-var-dims'>(y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-2932bb2f-3cca-440a-a475-e7ef41bfe37c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2932bb2f-3cca-440a-a475-e7ef41bfe37c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8377ba17-12e6-4882-97ae-b0dedb23b7f2' class='xr-var-data-in' type='checkbox'><label for='data-8377ba17-12e6-4882-97ae-b0dedb23b7f2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>long_name :</span></dt><dd>longitude coordinate</dd><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lon</dd><dt><span>_metpy_axis :</span></dt><dd>longitude</dd></dl></div><div class='xr-var-data'><pre>[34456 values with dtype=float64]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-0e252d8c-bef8-4e0a-8389-e9bf61be49eb' class='xr-section-summary-in' type='checkbox'  checked><label for='section-0e252d8c-bef8-4e0a-8389-e9bf61be49eb' class='xr-section-summary' >Data variables: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>pressure</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[900.34124661 900.62...</div><input id='attrs-330c1424-a26b-4142-b58e-27e2ca6dbb6f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-330c1424-a26b-4142-b58e-27e2ca6dbb6f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-de42379b-24f5-4577-940c-e13b46bce21a' class='xr-var-data-in' type='checkbox'><label for='data-de42379b-24f5-4577-940c-e13b46bce21a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_pressure</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[900.3412466141666 900.6282002263883 902.6954128823945 ... nan nan nan]  [898.7657927677703 899.3957330451849 901.1369631046779 ... nan nan nan]  [893.4104553118616 894.6623958512805 896.9688329797301 ... nan nan nan]  ...  [582.3629328442938 575.0471009518434 567.6847140894419 ...   802.8899086222864 803.7246159207159 804.6379705007769]  [578.6096930396801 570.8991740469492 563.2216412523484 ...   805.1512754403952 804.8142480497339 806.6181326510635]  [574.5889551269233 566.5030728802834 558.5810569436891 ...   806.337127284374 805.6222086748181 802.7520376016056]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>hectopascal</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>temperature</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[287.25340245 287.27...</div><input id='attrs-8acd09e9-791d-475c-9508-d22389dfe647' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8acd09e9-791d-475c-9508-d22389dfe647' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-652cf381-d103-4153-8fa4-cd8bb9ac7168' class='xr-var-data-in' type='checkbox'><label for='data-652cf381-d103-4153-8fa4-cd8bb9ac7168' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_temperature</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[287.25340245256615 287.2795573040488 287.4678010688309 ... nan nan   nan]  [287.10969897713835 287.16717993275586 287.32591469161804 ... nan nan   nan]  [286.61986771514216 286.73456514566794 286.94557123352325 ... nan nan   nan]  ...  [253.63209195921524 252.717632787544 251.78892602876513 ...   278.003694857879 278.0862415261764 278.1764957251152]  [253.16397872663083 252.19545647830967 251.22174909805472 ...   278.2271864365298 278.19390637133625 278.37191674895575]  [252.66008992959777 251.63907141231874 250.628598944255 ...   278.34420537550375 278.27367248968466 277.9900544878668]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>kelvin</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>u_wind</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[-1.31929409e+01 -1....</div><input id='attrs-8130daa6-4513-4e63-b124-d861e59d7e35' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8130daa6-4513-4e63-b124-d861e59d7e35' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3e4bbb7d-d74a-4001-9e45-28a3db02b951' class='xr-var-data-in' type='checkbox'><label for='data-3e4bbb7d-d74a-4001-9e45-28a3db02b951' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>m/s</dd><dt><span>long_name :</span></dt><dd>u_wind @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>u_wind</dd><dt><span>GRIB_param_short_name :</span></dt><dd>UGRD</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>33</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131  33]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[-13.192940863873579 -13.65521105416572 -13.558986233473753 ... nan   nan nan]  [-13.154258338549946 -12.98898740158556 -13.336929044329297 ... nan   nan nan]  [-12.389387286673664 -12.847664967104013 -12.39843211370755 ... nan   nan nan]  ...  [16.320100145853562 16.248921495708423 16.27194989717565 ...   0.43525579995775154 0.4346660048174416 0.7816840383266616]  [15.922591200947153 15.982942665930192 16.393562189156018 ...   -0.32284152376445374 -0.008841481805421963 -0.713418414296644]  [15.44181947114877 16.037097609603688 16.108870219801382 ...   -1.6896393580322255 -1.4068366627204874 -0.6618929663249936]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>meter/second</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v_wind</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[ 0.06423312  0.0747...</div><input id='attrs-d668f0c3-1159-4832-8202-570e34434a56' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d668f0c3-1159-4832-8202-570e34434a56' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ff6df66d-1035-4f80-9c01-7506340845c2' class='xr-var-data-in' type='checkbox'><label for='data-ff6df66d-1035-4f80-9c01-7506340845c2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>m/s</dd><dt><span>long_name :</span></dt><dd>v_wind @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>v_wind</dd><dt><span>GRIB_param_short_name :</span></dt><dd>VGRD</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>34</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131  34]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[0.06423312212716725 0.07479514517840302 -0.16838919556261756 ... nan   nan nan]  [1.1180292752741479 2.250400198749113 1.09121576156247 ... nan nan nan]  [2.86035077803406 1.8788880201288263 2.9904647623598932 ... nan nan   nan]  ...  [9.61300257672279 9.179177276496405 8.184948214882459 ...   -3.193627618337275 -3.2024544913787394 -2.7355462054862016]  [9.729327578400945 8.739680329084148 8.594322262130628 ...   -2.9011261628292413 -2.4743690966545935 -1.4870536737766273]  [9.750396540416503 9.148816761411762 8.764094179929574 ...   -1.6580673585775016 -1.2225487839300855 -1.4803113138672654]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>meter/second</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Specific_humidity</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[0.00884235 0.008867...</div><input id='attrs-0113b454-9870-469e-ad9c-b32a20bc4d74' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0113b454-9870-469e-ad9c-b32a20bc4d74' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b1543033-d988-4f30-9d90-6e3dd1532d7e' class='xr-var-data-in' type='checkbox'><label for='data-b1543033-d988-4f30-9d90-6e3dd1532d7e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>kg/kg</dd><dt><span>long_name :</span></dt><dd>Specific_humidity @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>Specific_humidity</dd><dt><span>GRIB_param_short_name :</span></dt><dd>SPFH</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>51</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131  51]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[0.008842348434263451 0.008867832268411289 0.008968565810944646 ...   nan nan nan]  [0.008817476631944828 0.008827154165882183 0.008907068600540524 ...   nan nan nan]  [0.008702820998113198 0.008732749531454769 0.00879103717829932 ... nan   nan nan]  ...  [0.0011029793308478734 0.001015732765712061 0.0009286300454721744 ...   0.00512211463389555 0.005146296653073053 0.005172386155577593]  [0.0010581905576279396 0.0009681548405628524 0.0008815840993866111 ...   0.005132649195315607 0.005147182989988019 0.005189398218805244]  [0.0010114271531914936 0.0009211118186668137 0.0008354252304436883 ...   0.005119733826822016 0.0051194957281872145 0.005091090654842702]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>dimensionless</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Geopotential_height</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[1063.66065133 1061....</div><input id='attrs-559f93ed-6c5c-49b3-8626-e876acb6068b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-559f93ed-6c5c-49b3-8626-e876acb6068b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3597d971-b93a-4926-b107-61c2203ad398' class='xr-var-data-in' type='checkbox'><label for='data-3597d971-b93a-4926-b107-61c2203ad398' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>gpm</dd><dt><span>long_name :</span></dt><dd>Geopotential_height @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>Geopotential_height</dd><dt><span>GRIB_param_short_name :</span></dt><dd>HGT</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>7</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131   7]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[1063.6606513260513 1061.4421473443042 1041.4938116153148 ... nan nan   nan]  [1079.478028125831 1073.556038742922 1057.65625580821 ... nan nan nan]  [1130.3143074681877 1119.0241948332116 1097.3894374693677 ... nan nan   nan]  ...  [4295.995558709708 4389.615879082378 4484.595154991587 ...   1937.4693639478376 1928.4660956108726 1918.677476615039]  [4337.046065967439 4436.491575694289 4536.385003616522 ...   1914.4659073478065 1916.8617994669883 1898.00906942551]  [4381.873356400557 4486.902635937249 4590.036687709444 ...   1902.9080146834517 1909.1451375862387 1937.4070179509758]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>meter</td></tr></tbody></table></div></li></ul></div></li><li class='xr-section-item'><input id='section-bd5f7a94-1501-4207-acd6-ab27d1c077dc' class='xr-section-summary-in' type='checkbox'  ><label for='section-bd5f7a94-1501-4207-acd6-ab27d1c077dc' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>isentropic_level</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-6c06d29e-c7a0-4e7b-ba0a-254bc4fafc8c' class='xr-index-data-in' type='checkbox'/><label for='index-6c06d29e-c7a0-4e7b-ba0a-254bc4fafc8c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([296.0], dtype=&#x27;float64&#x27;, name=&#x27;isentropic_level&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-7e22c13b-f55b-4f63-8174-333923ea25d3' class='xr-index-data-in' type='checkbox'/><label for='index-7e22c13b-f55b-4f63-8174-333923ea25d3' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-3086.8056464496035, -3054.3426464496033, -3021.8796464496036,
           -2989.4166464496034,  -2956.953646449603, -2924.4906464496034,
           -2892.0276464496037, -2859.5646464496035, -2827.1016464496033,
           -2794.6386464496036,
           ...
            419.19835355039686,   451.6613535503966,  484.12435355039634,
              516.587353550397,   549.0503535503967,   581.5133535503965,
             613.9763535503971,   646.4393535503968,   678.9023535503966,
             711.3653535503963],
          dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=118))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-94778b31-b053-47d5-a917-1356db647cb8' class='xr-index-data-in' type='checkbox'/><label for='index-94778b31-b053-47d5-a917-1356db647cb8' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ -3977.054863757302, -3944.5918637573022, -3912.1288637573025,
           -3879.6658637573023,  -3847.202863757302, -3814.7398637573024,
            -3782.276863757302,  -3749.813863757302, -3717.3508637573022,
           -3684.8878637573025,
           ...
             5177.511136242698,   5209.974136242698,   5242.437136242697,
             5274.900136242699,   5307.363136242699,   5339.826136242698,
             5372.289136242698,   5404.752136242698,   5437.215136242698,
             5469.678136242697],
          dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=292))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-97176277-e81e-4835-ba7f-d0060e917b40' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-97176277-e81e-4835-ba7f-d0060e917b40' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 75-77

Note that the units on our wind variables are not ideal for plotting. Instead, let us
convert them to more appropriate values.

.. GENERATED FROM PYTHON SOURCE LINES 77-81

.. code-block:: Python


    isent_data['u_wind'] = isent_data['u_wind'].metpy.convert_units('kt')
    isent_data['v_wind'] = isent_data['v_wind'].metpy.convert_units('kt')








.. GENERATED FROM PYTHON SOURCE LINES 82-86

**Converting to Relative Humidity**

The NARR only gives specific humidity on isobaric vertical levels, so relative humidity will
have to be calculated after the interpolation to isentropic space.

.. GENERATED FROM PYTHON SOURCE LINES 86-93

.. code-block:: Python


    isent_data['Relative_humidity'] = mpcalc.relative_humidity_from_specific_humidity(
        isent_data['pressure'],
        isent_data['temperature'],
        isent_data['Specific_humidity']
    ).metpy.convert_units('percent')








.. GENERATED FROM PYTHON SOURCE LINES 94-95

**Plotting the Isentropic Analysis**

.. GENERATED FROM PYTHON SOURCE LINES 95-140

.. code-block:: Python


    # Set up our projection and coordinates
    crs = ccrs.LambertConformal(central_longitude=-100.0, central_latitude=45.0)
    lon = isent_data['pressure'].metpy.longitude
    lat = isent_data['pressure'].metpy.latitude

    # Coordinates to limit map area
    bounds = [(-122., -75., 25., 50.)]
    # Choose a level to plot, in this case 296 K (our sole level in this example)
    level = 0

    fig = plt.figure(figsize=(17., 12.))
    add_metpy_logo(fig, 120, 245, size='large')
    ax = fig.add_subplot(1, 1, 1, projection=crs)
    ax.set_extent(*bounds, crs=ccrs.PlateCarree())
    ax.add_feature(cfeature.COASTLINE.with_scale('50m'), linewidth=0.75)
    ax.add_feature(cfeature.STATES, linewidth=0.5)

    # Plot the surface
    clevisent = np.arange(0, 1000, 25)
    cs = ax.contour(lon, lat, isent_data['pressure'].isel(isentropic_level=level),
                    clevisent, colors='k', linewidths=1.0, linestyles='solid',
                    transform=ccrs.PlateCarree())
    cs.clabel(fontsize=10, inline=1, inline_spacing=7, fmt='%i', rightside_up=True,
              use_clabeltext=True)

    # Plot RH
    cf = ax.contourf(lon, lat, isent_data['Relative_humidity'].isel(isentropic_level=level),
                     range(10, 106, 5), cmap=plt.cm.gist_earth_r, transform=ccrs.PlateCarree())
    cb = fig.colorbar(cf, orientation='horizontal', aspect=65, shrink=0.5, pad=0.05,
                      extendrect='True')
    cb.set_label('Relative Humidity', size='x-large')

    # Plot wind barbs
    ax.barbs(lon.values, lat.values, isent_data['u_wind'].isel(isentropic_level=level).values,
             isent_data['v_wind'].isel(isentropic_level=level).values, length=6,
             regrid_shape=20, transform=ccrs.PlateCarree())

    # Make some titles
    ax.set_title(f'{isentlevs[level]:~.0f} Isentropic Pressure (hPa), Wind (kt), '
                 'Relative Humidity (percent)', loc='left')
    add_timestamp(ax, isent_data['time'].values.astype('datetime64[ms]').astype('O'),
                  y=0.02, high_contrast=True)
    fig.tight_layout()




.. image-sg:: /examples/images/sphx_glr_isentropic_example_001.png
   :alt: 296 K Isentropic Pressure (hPa), Wind (kt), Relative Humidity (percent)
   :srcset: /examples/images/sphx_glr_isentropic_example_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 141-146

**Montgomery Streamfunction**

The Montgomery Streamfunction, :math:`{\psi} = gdz + CpT`, is often desired because its
gradient is proportional to the geostrophic wind in isentropic space. This can be easily
calculated with `mpcalc.montgomery_streamfunction`.

.. GENERATED FROM PYTHON SOURCE LINES 146-191

.. code-block:: Python



    # Calculate Montgomery Streamfunction and scale by 10^-2 for plotting
    msf = mpcalc.montgomery_streamfunction(
        isent_data['Geopotential_height'],
        isent_data['temperature']
    ).data.to_base_units() * 1e-2

    # Choose a level to plot, in this case 296 K
    level = 0

    fig = plt.figure(figsize=(17., 12.))
    add_metpy_logo(fig, 120, 250, size='large')
    ax = plt.subplot(111, projection=crs)
    ax.set_extent(*bounds, crs=ccrs.PlateCarree())
    ax.add_feature(cfeature.COASTLINE.with_scale('50m'), linewidth=0.75)
    ax.add_feature(cfeature.STATES.with_scale('50m'), linewidth=0.5)

    # Plot the surface
    clevmsf = np.arange(0, 4000, 5)
    cs = ax.contour(lon, lat, msf[level, :, :], clevmsf,
                    colors='k', linewidths=1.0, linestyles='solid', transform=ccrs.PlateCarree())
    cs.clabel(fontsize=10, inline=1, inline_spacing=7, fmt='%i', rightside_up=True,
              use_clabeltext=True)

    # Plot RH
    cf = ax.contourf(lon, lat, isent_data['Relative_humidity'].isel(isentropic_level=level),
                     range(10, 106, 5), cmap=plt.cm.gist_earth_r, transform=ccrs.PlateCarree())
    cb = fig.colorbar(cf, orientation='horizontal', aspect=65, shrink=0.5, pad=0.05,
                      extendrect='True')
    cb.set_label('Relative Humidity', size='x-large')

    # Plot wind barbs
    ax.barbs(lon.values, lat.values, isent_data['u_wind'].isel(isentropic_level=level).values,
             isent_data['v_wind'].isel(isentropic_level=level).values, length=6,
             regrid_shape=20, transform=ccrs.PlateCarree())

    # Make some titles
    ax.set_title(f'{isentlevs[level]:~.0f} Montgomery Streamfunction '
                 r'($10^{-2} m^2 s^{-2}$), Wind (kt), Relative Humidity (percent)', loc='left')
    add_timestamp(ax, isent_data['time'].values.astype('datetime64[ms]').astype('O'),
                  y=0.02, pretext='Valid: ', high_contrast=True)

    fig.tight_layout()
    plt.show()



.. image-sg:: /examples/images/sphx_glr_isentropic_example_002.png
   :alt: 296 K Montgomery Streamfunction ($10^{-2} m^2 s^{-2}$), Wind (kt), Relative Humidity (percent)
   :srcset: /examples/images/sphx_glr_isentropic_example_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 9.388 seconds)


.. _sphx_glr_download_examples_isentropic_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: isentropic_example.ipynb <isentropic_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: isentropic_example.py <isentropic_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: isentropic_example.zip <isentropic_example.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
